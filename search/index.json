[{"content":"本文提供了可在 Hugo 内容文件中使用的 Markdown 基本语法示例\n1 Headings 以下 HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; 元素代表六个级别的章节标题。\u0026lt;h1\u0026gt; 是最高章节级别，而 \u0026lt;h6\u0026gt; 是最低章节级别，一般我们从第二个章节开始使用来保证目录的可读性\nH1 H2 H3 H4 H5 H6 2 Blockquotes | 区块引用 区块引用元素（Blockquote）表示引用于其他来源的内容。它可以选择性地包含引文出处，这样点击右上角的角标就可以实现跳转，但需要注意的是此处的角标引用部分需要被包裹在Blockquote中。\n源码：\n1 2 3 4 5 \u0026gt; [!NOTE] \u0026gt; 不要通过共享内存来通信，而要通过通信来共享内存。\u0026lt;br\u0026gt; \u0026gt; \u0026gt; — \u0026lt;cite\u0026gt;Rob Pike[^1]\u0026lt;/cite\u0026gt; [^1]: 以上引言摘自 Rob Pike 于 2015 年 11 月 18 日在 Gopherfest 上的 [演讲](https://www.youtube.com/watch?v=PAAkCSZUG1c) 效果：\n不要通过共享内存来通信，而要通过通信来共享内存。\n— Rob Pike1\n3 Tables | 表格 表格不是核心 Markdown 规范的一部分，但 Hugo 开箱即用地支持它们。学习如何在 Markdown 中创建表格非常简单。你只需要使用一些管道符 | 和短横线 - 就可以构建出结构清晰的表格。\nStep1： 用管道符 | 来分隔你的表头单元格。\nStep2： 在表头下方，你必须添加一行分隔线来将表头和表格主体分开。这行由短横线 - 组成，并且也需要用 | 分隔。\n在这一行，你还可以通过添加冒号 : 来控制该列的文本对齐方式。\n: 在左边 (:---)：左对齐（默认）\n: 在右边 (---:)：右对齐\n: 在两边 (:---:)：居中对齐\nStep3: 填充表格内容\n现在，你可以一行一行地添加表格数据了，同样使用 | 来分隔每个单元格。\n1 2 3 4 5 | 姓名 | 年龄 | 职业 | | :--- | :--: | ---: | | 张三 | 32 | 工程师 | | 李四 | 28 | 设计师 | | 王五 | 45 | 教师 | 最终效果\n姓名 年龄 职业 张三 32 工程师 李四 28 设计师 王五 45 教师 提示：Markdown 源码中每列的 | 不必严格对齐，只要语法正确，最终渲染出来的表格就是对齐的。\n4 Code Blocks | 代码块 代码块有三种添加方式，第一种方法用backticks，即三个```标出；第二种是用4个空格标出，区别在于用反引号标出在添加对应的编译语言后会有高亮显示；第三种是用Hugo 内部高亮短代码；\n4.1 添加代码块的几种方式/高亮 用反引号添加的代码块 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 用四个空格添加的代码块 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 带有 Hugo 内部高亮短代码的代码块 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 4.2 Diff code block | 如何显示出代码的删减 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] 5 角标、缩写词、颜色显示 5.1 abbr | 缩写词 \u0026lt;abbr\u0026gt; 标签用于定义一个缩写或首字母缩略词，当鼠标悬停在文本上时，会显示完整的词语。\nMarkdown 写法: *[HTML]: Hyper Text Markup Language\nHTML 写法: \u0026lt;abbr title=\u0026quot;Hyper Text Markup Language\u0026quot;\u0026gt;HTML\u0026lt;/abbr\u0026gt;\n效果：\nGIF is a bitmap image format.\n5.2 下标 (sub) 和上标 (sup) \u0026lt;sub\u0026gt; 用于创建下标文本（比普通文本低一点），而 \u0026lt;sup\u0026gt; 用于创建上标文本（比普通文本高一点）。它们在化学式、数学公式或脚注中非常有用。\n下标写法: H\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt;O\n上标写法: E = mc\u0026lt;sup\u0026gt;2\u0026lt;/sup\u0026gt;\n效果：\nH2O\nE = mc2\n5.3 键盘输入 (kbd) \u0026lt;kbd\u0026gt; 标签用于在文档中标记用户通过键盘输入的内容，它通常会以一种独特的、类似按键的样式显示。\n写法: \u0026lt;kbd\u0026gt;按键名称\u0026lt;/kbd\u0026gt;\n效果：\n按下 CTRL + ALT + Delete 来结束会话。\n5.4 黄色标记（mark） \u0026lt;mark\u0026gt; 标签用于高亮或标记文本的特定部分，以引起读者的注意，就像用荧光笔划过一样。\n写法: \u0026lt;mark\u0026gt;需要高亮的文本\u0026lt;/mark\u0026gt;\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n5.5 分割线 分割线用于在内容中创建一个“主题转换”的水平分隔线，常用来在视觉上区分不同的段落或思想区块。它在 HTML 中对应的标签是 \u0026lt;hr\u0026gt;。\n写法: 在一行中，单独使用三个或更多的短横线 (-)、星号 (*) 或下划线 (_)。为了保证兼容性，建议在分割线的上下都保留一个空行。\n效果：\n6 Hyperlinked image | 超链接图片 要创建一个可以点击的图片链接，你需要将 Markdown 的图片语法嵌套在链接语法的“链接文本”部分。\n语法结构:\n1 [![图片的替代文本](图片URL)](链接URL) [![...]]: 外层的 [] 是链接的文本部分，里面嵌套了完整的图片 ![...]。\n(图片URL): 图片文件的地址。\n(链接URL): 点击图片后要跳转到的目标网页地址。\n示例:测试并不成功 ,还是老老实实放在文件夹里然后直接通过文件名引用就可以了\n1 ![替换后的名称](test.jpg) --test.jpg为文件名 7 数学公式 在 Hugo 项目中，可以通过引入第三方的 JavaScript 库来启用数学公式的渲染。我们将以 KaTeX 这个库为例，它以其出色的渲染速度而闻名。\n7.1 配置方法 7.1.1 第一步：创建 math.html 文件 在dev/layouts/partials/ 文件夹中创建一个名为 math.html 的新文件。\n将下面的代码完整地复制并粘贴到 math.html 文件中。\n(这段代码引入了 KaTeX 的 CSS 样式表和 JS 脚本) 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css\u0026#34; integrity=\u0026#34;sha384-n8MVd4RsNIU07EWpWUAz5zCgxUW8/mapKssFMAGoerPGgwkmb9oSaxKk6tUifA humbling experience.\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js\u0026#34; integrity=\u0026#34;sha384-XjKyOOlGwcjNTAIQHIpgOno0Hl1YQqzYCPa3Ia/466rGNebM2GTkIaEATTsYry8c\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/contrib/auto-render.min.js\u0026#34; integrity=\u0026#34;sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; onload=\u0026#34;renderMathInElement(document.body, { delimiters: [ {left: \u0026#39;$$\u0026#39;, right: \u0026#39;$$\u0026#39;, display: true}, {left: \u0026#39;$\u0026#39;, right: \u0026#39;$\u0026#39;, display: false}, {left: \u0026#39;\\\\[\u0026#39;, right: \u0026#39;\\\\]\u0026#39;, display: true}, {left: \u0026#39;\\\\(\u0026#39;, right: \u0026#39;\\\\)\u0026#39;, display: false} ] });\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 7.1.2 第二步：在你的模板中引入 math.html 你需要告诉 Hugo 在哪些页面上加载上面创建的 math.html 文件。最佳实践是在 layouts/partials/head/ 文件夹内的custom.html，添加以下代码：\n1 2 3 4 {{/* 只有当全局或页面开启 math 时，才加载 KaTeX 公式支持脚本 */}} {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} 7.1.3 第三步：开启数学公式功能 你有两种方式来开启它：\n全局开启 (所有文章默认都支持):\n打开网站的配置文件（`hugo.yaml``）。\n在 params 部分下，添加 math: true。\n1 2 3 params: # ... 其他 params 设置 ... math: true 单页开启 (仅在需要的文章中开启):\n在你需要使用数学公式的 Markdown 文章的文件头部（Front Matter），添加 math: true 7.2 文档中的写法 写法:\n行内公式 (Inline math): 使用 $...$ 或 \\\\(...\\\\) 包裹 LaTeX 公式。\n块级公式 (Block math): 使用 $$...$$ 或 \\\\[...\\\\] 包裹 LaTeX 公式，公式将居中显示。\n效果:\n行内公式: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n块级公式: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 8. Emoji 的简码引用方法 🚀 在 Hugo 项目中，有多种方式可以启用 Emoji (表情符号)。最简单的方法是开启 Hugo 内置的 Emoji 功能。\n8.1 使用教程 8.1.1 第一步：全局开启 Emoji 功能 要让整个网站都支持直接输入 Emoji 代码，你需要在网站的根配置文件中将 enableEmoji 参数设置为 true。\n在配置文件 hugo.yaml，添加：\n1 enableEmoji: true 8.1.2 第二步：在 Markdown 文件中书写 完成配置后，你就可以在你的内容文件（.md 文件）中直接使用 Emoji 的“简码”（shorthand codes）了。Hugo 在生成页面时会自动将这些代码转换成对应的表情符号。\n写法与效果示例：\n可以把 Hugo 的这个功能想象成一个自动翻译机。输入：“简码”，比如 :rocket:，在发布网站时，Hugo 会自动把这个暗号“翻译”成对应的彩色表情符号（比如 🚀），我们使用的代买如下：\n1 2 3 4 5 6 7 8 9 10 经过团队一个月的努力，我们的新版本终于在今天发布了！ :tada: 这是一个巨大的里程碑，我要感谢每一位成员的辛勤付出。 回顾整个过程，我们遇到了不少挑战，有过深夜还:see_no_evil:的时候， 也有过靠咖啡 :coffee: 续命的时刻。 但最终，我们做到了！希望大家喜欢这次的更新。 请给我们点赞吧！ :+1: 旅程还在继续，向着星辰大海出发！ :rocket: 最后的呈现效果\n经过团队一个月的努力，我们的新版本终于在今天发布了！ \u0026#x1f389;\n这是一个巨大的里程碑，我要感谢每一位成员的辛勤付出。 回顾整个过程，我们遇到了不少挑战，有过深夜还在思考 \u0026#x1f648;的时候， 也有过靠咖啡 \u0026#x2615; 续命的时刻。\n但最终，我们做到了！希望大家喜欢这次的更新。 请给我们点赞吧！ \u0026#x1f44d;\n旅程还在继续，向着星辰大海出\n8.2 补充说明 8.2.1 Emoji 速查表 你可以通过下面的 Emoji 速查表网站找到所有可用的 Emoji 及其对应的简码：\nEmoji Cheat Sheet 8.2.2 关于表情符号的样式 请注意：以上步骤只是让 Hugo 能够识别并生成标准的 Unicode 表情符号字符。这些符号最终如何渲染（例如，显示成苹果风格、谷歌风格还是微软风格的 emoji），取决于访客的浏览器和操作系统。\n为了让 Emoji 在不同平台上的显示效果更统一、更美观，可以选择使用第三方的 Emoji 字体或定义一个字体栈（font stack）。\n例如，你可以将以下 CSS 代码添加到你的自定义样式文件中（例如 assets/scss/custom.scss）：\n1 2 3 .emoji { font-family: \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;NotoColorEmoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;, \u0026#34;Android Emoji\u0026#34;, \u0026#34;EmojiSymbols\u0026#34;; } 这段代码会告诉浏览器，在渲染 Emoji 时，请优先尝试使用列表中的专用 Emoji 字体，从而获得更好的显示效果。\n以上引言摘自 Rob Pike 于 2015 年 11 月 18 日在 Gopherfest 上的 演讲\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2025-09-08T20:32:25+08:00","image":"https://BucketSran.github.io/hugo-dev/p/hugo-%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84-markdown-%E8%AF%AD%E6%B3%95/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://BucketSran.github.io/hugo-dev/p/hugo-%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84-markdown-%E8%AF%AD%E6%B3%95/","title":"Hugo 框架下的 Markdown 语法"},{"content":"1 写在前面 一直有想写一下已经看过的小说书单的念头，所以干脆就写在这里吧，就当Markdown语法练习了，虽然感觉平时记笔记还是用Notion最方便。Anyway，这个帖子就用来记录我从小到大看过的小说吧，以后应该会继续更新这篇blog。\n2 正文 下面的小说顺序尽量从时间顺序来排吧，为了不被点艹我的小说品味，我就不对小说评级了（bushi），但还是会稍微写一点我的点评吧，that\u0026rsquo;all\n2.1 《武极天下》 - 蚕茧里的牛 武极天下应该是我看的真正意义上的第一本小说，应该是小学四年级左右，每天都藏在被窝里狂看，被抓住了就被狂骂。后来发现其实家长进房间，是很难发现你在偷看的，但是如果自己慌张了就会发出声音，那样就会被抓。所以家长进房间，你只需要把手机熄灯，其他什么都不干，是不会被发现滴~\n武极天下里面的主角我是真还蛮喜欢的，下面引用一下百度百科里的故事简介：该小说的主角林铭原本是资质偏差的武者，但却拥有着坚定无比的武道之心。该书讲述了林铭因机缘巧合之下得到世界三神器中的神晶魔方，开始了其波澜壮阔的旅程，成为人族第一强者。成为真神后击败圣族的造化圣皇，解除人族威胁。后修为超越真神，最终带领三十三重天大宇宙种族战胜黑暗深渊恶魔一族，并打败魔神之墓墓主的故事。\n我后面看了很多小说，很多也都是东方玄幻，但我觉得主角林铭在里面也算得上是有情有义，正道楷模了（和方源形成了鲜明的对比🐶）,所以还是很推荐大家看一下滴，毕竟算是我的小说白月光了。\n顺带一提 《真武世界》 - 蚕茧里的牛 忘记是什么时候开始看的真武世界，但我应该是追更追完的这本书，看的原因是，《武极天下》算是埋了一个小伏笔，带着对《武极天下》的热爱，我看完了《真武世界》，可惜，这本书有很多逻辑不合理的地方，很多伏笔也没有回收。所以不推荐看这本书，嘿嘿\n2.2 《斗罗大陆》/ 《斗罗大陆2 - 绝世唐门》 - 唐家三少 未完待续\u0026hellip;\u0026hellip;\n","date":"2025-09-08T20:32:25+08:00","image":"https://BucketSran.github.io/hugo-dev/p/%E8%81%8A%E4%B8%80%E8%81%8A%E6%88%91%E7%9C%8B%E8%BF%87%E7%9A%84%E5%B0%8F%E8%AF%B4/bujue_hu_23569698224c601.jpg","permalink":"https://BucketSran.github.io/hugo-dev/p/%E8%81%8A%E4%B8%80%E8%81%8A%E6%88%91%E7%9C%8B%E8%BF%87%E7%9A%84%E5%B0%8F%E8%AF%B4/","title":"聊一聊我看过的小说"},{"content":"1 主页面美化 1.1 修改头像 修改主目录 dev/ 下的 hugo.yaml 相关代码\n头像文件可以是.jpg / .gif，但是不能使用.svg，头像文件存放在dev\\assets\\img下\n1.2 修改主页头像下的链接 修改主目录 dev/ 下的 hugo.yaml 相关代码\n链接图标采用.svg，图标文件存放在dev\\assets\\icons下\n链接所需要的icon元素可以在网页\u0026lt;Tabler Icons: 5900+ free vector icons for web design\u0026gt;找到\n1.3 关键词检索和标签云设置 修改主目录 dev/ 下的 hugo.yaml 相关代码 1.4 主页左边分类栏的名称如何修改 在dev/content/page下文件夹的名称对应左边栏，进入这几个文件夹修改index.md文件的title一行值即可 1.5 其他 标签/发布日期时间格式/个性签名/主页最下方的小字/评论功能的配置都可以在主目录的hugo.yaml下修改代码实现\n2 如何为博客添加内容 2.1 如何新增一篇博客 修改主目录 dev/content/post 下的相关内容，若想新增一篇新的博客，只需要新建一个文件夹，文件夹名称和文章名称一致，在该文件夹下新建一个index.md文件，此后在该文件中进行编辑即可。 2.2 如何为博客添加封面 找到对应文件夹下的index.md文件，编辑下面代码中的image项\n1 2 3 4 5 date = \u0026#39;2025-09-08T20:32:25+08:00\u0026#39; draft = true title = \u0026#39;部分操作指南\u0026#39; description = \u0026#39;个人使用记录\u0026#39; image = \u0026#39;we_are_all_clowns.jpg\u0026#39; 将所需的图片文件放在对应文件夹的目录下即可，此处为E:\\crazyIdeas\\hugoWeb\\dev\\content\\post\\部分操作指南\n3 美化方法 3.1 博客内容美化 3.1.1 macOS风格的代码块 (1) 准备一张macOS代码块的红绿灯图片(Ctrl+S保存), 放到static/icons文件夹下\n(2) 将以下代码复制进assets/scss/custom.scss文件中(不存在则自行创建)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 .highlight { border-radius: var(--card-border-radius); max-width: 100% !important; margin: 0 !important; box-shadow: var(--shadow-l1) !important; } .highlight:before { content: \u0026#34;\u0026#34;; display: block; background: url(../icons/macOS-code-header.svg) no-repeat 0; background-size: contain; height: 18px; margin-top: -10px; margin-bottom: 10px; } 3.1.2 代码块过长折叠\u0026amp;展开 (1) 准备一张向下展开图片(Ctrl+S保存)，放到assets/icons目录下\n(2) 将以下代码复制进layouts/partials/footer/custom.html(文件不存在则自行创建)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 \u0026lt;style\u0026gt; .highlight { /* 你可以根据需要调整这个高度 */ max-height: 400px; overflow: hidden; } .code-show { max-height: none !important; } .code-more-box { width: 100%; padding-top: 78px; background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), to(#fff)); position: absolute; left: 0; right: 0; bottom: 0; z-index: 1; } .code-more-btn { display: block; margin: auto; width: 44px; height: 22px; background: #f0f0f5; border-top-left-radius: 8px; border-top-right-radius: 8px; padding-top: 6px; cursor: pointer; } .code-more-img { cursor: pointer !important; display: block; margin: auto; width: 22px; height: 16px; } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; function initCodeMoreBox() { let codeBlocks = document.querySelectorAll(\u0026#34;.highlight\u0026#34;); if (!codeBlocks) { return; } codeBlocks.forEach(codeBlock =\u0026gt; { // 校验是否overflow if (codeBlock.scrollHeight \u0026lt;= codeBlock.clientHeight) { return; } // 元素初始化 // codeMoreBox let codeMoreBox = document.createElement(\u0026#39;div\u0026#39;); codeMoreBox.classList.add(\u0026#39;code-more-box\u0026#39;); // codeMoreBtn let codeMoreBtn = document.createElement(\u0026#39;span\u0026#39;); codeMoreBtn.classList.add(\u0026#39;code-more-btn\u0026#39;); codeMoreBtn.addEventListener(\u0026#39;click\u0026#39;, () =\u0026gt; { codeBlock.classList.add(\u0026#39;code-show\u0026#39;); codeMoreBox.style.display = \u0026#39;none\u0026#39;; // 触发resize事件，重新计算目录位置 window.dispatchEvent(new Event(\u0026#39;resize\u0026#39;)) }) // img let img = document.createElement(\u0026#39;img\u0026#39;); img.classList.add(\u0026#39;code-more-img\u0026#39;); img.src = {{ (resources.Get \u0026#34;icons/codeMore.png\u0026#34;).Permalink }} // 元素添加 codeMoreBtn.appendChild(img); codeMoreBox.appendChild(codeMoreBtn); codeBlock.appendChild(codeMoreBox) }) } initCodeMoreBox(); \u0026lt;/script\u0026gt; (3)因为在博客中引入了Pjax，新添加的这段 initCodeMoreBox() 脚本目前只会在页面首次加载时运行一次。这意味着，当通过点击链接（PJAX 跳转）进入另一篇文章页面时，initCodeMoreBox() 不会重新运行，导致新页面的代码块将不会出现“展开更多”的按钮。为了解决这个问题，你需要让这个函数在每次 PJAX 加载完成后也执行一次。 把现有代码丢给AI，直接解决了，Gemini王朝了\n3.1.3 自定义MD引用块颜色模板 参考文章：让Hugo支持GitHub风格的块引用Alerts\n(1) 创建文件layouts/_default/_markup/render-blockquote-alert.html，并将以下代码复制进去\n1 2 3 \u0026lt;blockquote class=\u0026#34;alert alert-{{ .AlertType }}\u0026#34;\u0026gt; {{ .Text | safeHTML -}} \u0026lt;/blockquote\u0026gt; (2) 将以下代码复制进assets/scss/custom.scss 配色参考来源：martignoni/hugo-notice 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 [data-scheme=\u0026#34;light\u0026#34;] { .alert-note { --card-separator-color: #65bbee; --blockquote-background-color: #e7f2fa; } .alert-tip { --card-separator-color: #55aa55; --blockquote-background-color: #eeffee; } .alert-warn { --card-separator-color: #ffbb78; --blockquote-background-color: #ffeecc; } .alert-error { --card-separator-color: #cc3334; --blockquote-background-color: #ffeeef; } } [data-scheme=\u0026#34;dark\u0026#34;] { .alert-note { --card-separator-color: #006699; --blockquote-background-color: #002234; } .alert-tip { --card-separator-color: #336733; --blockquote-background-color: #112310; } .alert-warn { --card-separator-color: #aa5501; --blockquote-background-color: #452300; } .alert-error { --card-separator-color: #880000; --blockquote-background-color: #450000; } } (3) 使用方法 可选项：NOTE | TIP | WARN | ERROR 可仿照上面css写法，自行添加新的css样式，来实现更多的可选项 1 2 \u0026gt; [!NOTE] \u0026gt; 这是markdown的引用块语法 (4) 效果演示 这是NOTE风格\n这是TIP风格\n3.1.4 更改目录的显示 现在目录的格式如下 ，会出现双重标记\n现在我想要更改文章目录（Table of Contents, TOC）的显示样式，去掉前面的数字角标（如 1.、1.1.），只保留一个点或者其他符号，目前的配置文件（hugo.yaml）中已经正确地设置了生成目录的逻辑，现在我们需要做的就是改变它的外观。\n其实还是在主目录下的hugo.yaml修改就可以了\n在 hugo.yaml 配置文件中，与目录（TOC）相关的部分在这里：\n1 2 3 4 5 6 markup: # ... 其他 goldmark 配置 ... tableOfContents: endLevel: 4 ordered: true # \u0026lt;--- 这个是关键,将其改成false就可以了 startLevel: 2 3.2 主页字体和鼠标修改 3.2.1 修改字体 把字体文件放入assets/font下\n将以下代码修改并复制到layouts/partials/footer/custom.html文件中(文件不存在就自己创建)\n字体名：给字体命名一个别名，随便填写就好，保持统一就行 字体文件名：字体文件的全名，带后缀名的，也就是 xxx.ttf 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;style\u0026gt; @font-face { font-family: \u0026#39;字体名\u0026#39;; src: url({{ (resources.Get \u0026#34;font/字体文件名\u0026#34;).Permalink }}) format(\u0026#39;truetype\u0026#39;); } :root { --base-font-family: \u0026#39;字体名\u0026#39;; --code-font-family: \u0026#39;字体名\u0026#39;; } \u0026lt;/style\u0026gt; 3.2.2 修改鼠标样式 参考链接\u0026lt;【Hugo】Stack主题自定义修改\u0026gt; 4 一些零散的修改 4.1 主页友链links相关 4.1.1 友链、归档多列显示 修改assets/scss/custom.scss文件，可以设置为2个/3个links同行 4.1.2 如何添加友链 修改dev/content/page/links下的index.md文件 将所需的ico文件放在同样的dev/content/page/links文件夹下即可，ico文件可以通过\u0026lt;Favicon.im: 即时网站图标获取器\u0026gt;获得 4.2 如何添加更多的音乐 4.2.1 获取音乐 可以在这个网站进行下载\u0026lt;歌曲海\u0026gt;\n专辑的封面可以通过下面的网站获取iSearch 4.5 专辑封面获取，不过需要科学上网\n4.2.2 操作步骤 在dev\\static\\music添加对应的文件夹，命名方式以许嵩 - 星座书上为例\n文件夹中存放三个文件，分别为cover.jpg lyric.lrc song.mp3\n在dev\\layouts\\partials\\footer目录下修改 aplayer.html\n4.3 有关Pjax下评论区不显示的问题 在dev/layouts/partials/comments/provider/下新建 giscus.html文件，只添加\u0026lt;div id=\u0026quot;giscus-container\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;代码，这段代码将提供一个信号（告诉 JS 该加载了）和一个舞台（告诉 JS 在哪里加载）。\n更新自定义脚本，将把 Giscus 的初始化逻辑整合到现有的 custom.html 脚本中。\n","date":"2025-09-08T20:32:25+08:00","image":"https://BucketSran.github.io/hugo-dev/p/%E7%BD%91%E7%AB%99%E5%86%85%E5%AE%B9%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88%E8%87%AA%E7%94%A8/we_are_all_clowns_hu_f2883faf09433e14.jpg","permalink":"https://BucketSran.github.io/hugo-dev/p/%E7%BD%91%E7%AB%99%E5%86%85%E5%AE%B9%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88%E8%87%AA%E7%94%A8/","title":"网站内容优化方案（自用）"}]